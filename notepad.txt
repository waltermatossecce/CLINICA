
create table Analysis(
AnalysisId int identity(1,1)primary key not null,
Name varchar(50),
State int not null
AudiCreateDate datetime2(7)not null
);

/*LISTA ANALYSIS*/
CREATE PROCEDURE uspAnalysisList
AS
BEGIN
   select 
   AnalysisId,
   AudiCreateDate,
   State,
   Name
   from Analysis
END

exec uspAnalysisList;

CREATE OR ALTER PROCEDURE uspAnalysisById
(
 @AnalysisId int
)
AS
BEGIN
    SELECT 
	 AnalysisId,
	 Name
	FROM Analysis
	Where AnalysisId = @AnalysisId
END

Select * from Analysis;



//procedimiento para guardar analysis
CREATE PROCEDURE uspAnalysisRegister
(
  @Name varchar(100),
  @State int,
  @AudiCreateDate datetime
)
AS
BEGIN

   insert into Analysis
   (
   name,
   State,
   AudiCreateDate
   )
   values
   (
    @Name,
	@State,
	@AudiCreateDate
   );
END

//Para actualizar analysis
CREATE PROCEDURE uspAnalysisEdit
(
 @AnalysisId int,
 @Name varchar(50)
)
AS
BEGIN
  UPDATE Analysis
  set Name = @Name
  where AnalysisId = @AnalysisId
END

//Para eliminar un AnalysisId 
CREATE PROCEDURE uspAnalysisRemove
(
 @AnalysisId int
)
AS
BEGIN
  Delete from Analysis
  where AnalysisId = @AnalysisId
END


//creamos la table examen y el procedimiento almacenado
create table Exams
(
  ExamId int identity(1,1)primary key not null,
  Name varchar(100),
  AnalysisId INT NOT NULL,
  State int not null,
  AuditCreateDate datetime2(7)not null,
  Foreign key (AnalysisId) references Analysis(AnalysisId)
);

CREATE OR ALTER PROCEDURE uspExamList
AS
BEGIN
   SELECT
	   ex.ExamId,
	   ex.Name,
	   a.Name Analysis,
	   ex.AuditCreateDate,
	   case ex.State WHEN 1 THEN 'ACTIVO'
	   ELSE 'INACTIVO'
	   END StateExam
	   from Exams ex
	   inner join Analysis a
	   ON ex.AnalysisId=a.AnalysisId 
END

//busca por id de examen
CREATE OR ALTER PROCEDURE uspExamenById 
(
 @ExamId int
)
AS
BEGIN
  SELECT 
  ex.ExamId,
  ex.Name,
  ex.AnalysisId
  FROM Exams ex
  WHERE ex.ExamId =@ExamId
END

//guardar registro de examen
create or alter procedure uspExamRegister
(
@Name varchar(100),
@AnalysisId int 
)
AS
BEGIN 
   INSERT INTO Exams
   (
   Name,
   AnalysisId,
   State,
   AuditCreateDate
   )
   VALUES
   (
     @Name,
	 @AnalysisId,
	 1,
	 GETDATE()
   )
END
create or alter procedure uspExamenUpdate
(
 @ExamId int,
 @Name varchar(100),
 @AnalysisId int
)
AS
BEGIN
   UPDATE Exams 
   set Name = @Name,
   AnalysisId = @AnalysisId
   WHERE ExamId = @ExamId
END

create or alter procedure uspExamenDelete
(
 @ExamId int
)
AS
BEGIN
   DELETE from Exams
   where ExamId= @ExamId 
END

select * from Exams;

create or alter procedure uspExamenChangeState
(
  @ExamId int,
  @State int
)
AS
BEGIN
    UPDATE Exams
	set State = @State
	WHERE ExamId = @ExamId
END
